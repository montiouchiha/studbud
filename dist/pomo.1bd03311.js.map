{"mappings":"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","sources":["public/pomo.js"],"sourcesContent":["// on set time click run the function\r\ndocument.getElementById(\"pomodoro-set-time\").onclick = function() {\r\n\r\n    // create variables based on input from pomodoro inputs and create multiple variables for each iteration\r\n    var buttonStart = document.getElementById('pomodoro-start');\r\n    const startingMinutesStudy = document.getElementById(\"studyTimeInput\").value\r\n\r\n    const startingMinutesBreak = document.getElementById(\"studyBreakInput\").value\r\n    const NumberSessions = document.getElementById(\"numSessInput\").value\r\n    var timeStudy = startingMinutesStudy * 60;\r\n    var timeBreak = startingMinutesBreak * 60;\r\n\r\n    const startingMinutesStudy2 = JSON.parse(JSON.stringify(startingMinutesStudy));\r\n    const startingMinutesBreak2 = JSON.parse(JSON.stringify(startingMinutesBreak));\r\n    var timeStudy2 = startingMinutesStudy2 * 60;\r\n    var timeBreak2 = startingMinutesBreak2 * 60;\r\n\r\n    const startingMinutesStudy3 = JSON.parse(JSON.stringify(startingMinutesStudy2));\r\n    const startingMinutesBreak3 = JSON.parse(JSON.stringify(startingMinutesBreak2));\r\n    var timeStudy3 = startingMinutesStudy3 * 60;\r\n    var timeBreak3 = startingMinutesBreak3 * 60;\r\n\r\n    var interval;\r\n    var j = NumberSessions;\r\n\r\n    // check that number of sessions is less than 3\r\n    if (NumberSessions <= 3) {\r\n\r\n        // check that study time and break time are integers\r\n        if(Number.isInteger(parseFloat(startingMinutesStudy)) && Number.isInteger(parseFloat(NumberSessions)) && Number.isInteger(parseFloat(startingMinutesBreak))){\r\n            \r\n            // Calculate the total session time\r\n            document.getElementById(\"totalTime\").innerHTML = (parseInt(startingMinutesBreak) + parseInt(startingMinutesStudy))*NumberSessions\r\n\r\n            // assign variable to countdown element\r\n            const countdownEl = document.getElementById('pomodoro-countdown');\r\n\r\n\r\n            // _________________ITERATION 1___________________\r\n\r\n            function updateCountdownStudy() {\r\n                // determine minutes of study and seconds of study\r\n                const minutesStudy = Math.floor(timeStudy / 60);\r\n                let seconds = timeStudy % 60;\r\n                \r\n                // ensure that if seconds is less than 10, add 0 in front of seconds\r\n                seconds = seconds < 10 ? '0' + seconds : seconds;\r\n\r\n                // update screen with the current time\r\n                countdownEl.innerHTML = minutesStudy + \":\" + seconds;\r\n\r\n                // countdown a second\r\n                timeStudy--;\r\n\r\n                // stop counter once it reaches 0\r\n                if (seconds == 0 && minutesStudy == 0){\r\n                    clearInterval(interval); \r\n\r\n                    // start first countdown of break timer\r\n                    interval = setInterval(updateCountdownBreak, 1000);\r\n                }\r\n            }\r\n\r\n            // implement same countdown function as the CountdownStudy\r\n            function updateCountdownBreak() {\r\n                const minutesBreak = Math.floor(timeBreak / 60);\r\n                let seconds = timeBreak % 60;\r\n\r\n                seconds = seconds < 10 ? '0' + seconds : seconds;\r\n\r\n                countdownEl.innerHTML = minutesBreak + \":\" + seconds;\r\n                timeBreak--;\r\n                if (seconds == 0 && minutesBreak == 0){\r\n                    clearInterval(interval); \r\n                    // countdown session number timer\r\n                    j--\r\n                    // run function that sets the interval for the next study period and runs a new countdown\r\n                    iterate()\r\n                }\r\n            }\r\n\r\n\r\n            // _________________ITERATION 2___________________\r\n\r\n            function updateCountdownStudy2() {\r\n                const minutesStudy2 = Math.floor(timeStudy2 / 60);\r\n                let seconds = timeStudy2 % 60;\r\n\r\n                seconds = seconds < 10 ? '0' + seconds : seconds;\r\n\r\n                countdownEl.innerHTML = minutesStudy2 + \":\" + seconds;\r\n                timeStudy2--;\r\n                if (seconds == 0 && minutesStudy2 == 0){\r\n                    clearInterval(interval); \r\n                    interval = setInterval(updateCountdownBreak2, 1000);\r\n                }\r\n            }\r\n\r\n            function updateCountdownBreak2() {\r\n                const minutesBreak2 = Math.floor(timeBreak2 / 60);\r\n                let seconds = timeBreak2 % 60;\r\n\r\n                seconds = seconds < 10 ? '0' + seconds : seconds;\r\n\r\n                countdownEl.innerHTML = minutesBreak2 + \":\" + seconds;\r\n                timeBreak2--;\r\n                if (seconds == 0 && minutesBreak2 == 0){\r\n                    // alert(\"done\")\r\n                    clearInterval(interval);\r\n                    j--\r\n                    iterate2()\r\n                }\r\n            }\r\n\r\n\r\n            // _________________ITERATION 3___________________\r\n\r\n            function updateCountdownStudy3() {\r\n                const minutesStudy3 = Math.floor(timeStudy3 / 60);\r\n                let seconds = timeStudy3 % 60;\r\n\r\n                seconds = seconds < 10 ? '0' + seconds : seconds;\r\n\r\n                countdownEl.innerHTML = minutesStudy3 + \":\" + seconds;\r\n                timeStudy3--;\r\n                if (seconds == 0 && minutesStudy3 == 0){\r\n                    clearInterval(interval); \r\n                    interval = setInterval(updateCountdownBreak3, 1000);\r\n                }\r\n            }\r\n\r\n            function updateCountdownBreak3() {\r\n                const minutesBreak3 = Math.floor(timeBreak3 / 60);\r\n                let seconds = timeBreak3 % 60;\r\n\r\n                seconds = seconds < 10 ? '0' + seconds : seconds;\r\n\r\n                countdownEl.innerHTML = minutesBreak3 + \":\" + seconds;\r\n                timeBreak3--;\r\n                if (seconds == 0 && minutesBreak3 == 0){\r\n                    // alert(\"done\")\r\n                    clearInterval(interval);\r\n                    j--\r\n                }\r\n            }\r\n            \r\n            // functions which handle the defining of each interval and the next subsequent countdown period\r\n            \r\n            buttonStart.onclick = function() {\r\n                interval = setInterval(updateCountdownStudy, 1000);\r\n            }\r\n\r\n            function iterate(){\r\n                if (j>0){\r\n                    interval = setInterval(updateCountdownStudy2, 1000);\r\n                }\r\n            }\r\n\r\n            function iterate2(){\r\n                if (j>0){\r\n                    interval = setInterval(updateCountdownStudy3, 1000);\r\n                }\r\n            }\r\n        }\r\n        // ensures that only integers are entered in all fields\r\n        else{\r\n            alert(\"Please enter only integers\")     \r\n        }\r\n    }\r\n    // ensures that the user does not try to enter more than 3 sesions of pomodoro study/breaks\r\n    else{\r\n        alert(\"Please enter an integer of 3 or less\") \r\n    }\r\n}"],"names":[],"version":3,"file":"pomo.1bd03311.js.map","sourceRoot":"/__parcel_source_root/"}